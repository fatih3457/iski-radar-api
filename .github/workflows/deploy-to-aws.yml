# İş akışımızın adı. GitHub'ın "Actions" sekmesinde bu isimle görünecek.
name: Deploy Backend to AWS Elastic Beanstalk

# Bu iş akışı ne zaman tetiklenecek?
on:
  push:
    branches:
      - main # Sadece 'main' dalına bir push yapıldığında çalışsın.

jobs:
  # "deploy" adında bir iş tanımlıyoruz.
  deploy:
    # Bu iş, en güncel Ubuntu işletim sistemine sahip sanal bir makinede çalışacak.
    runs-on: ubuntu-latest

    # İşin adımları:
    steps:
      # 1. Adım: Kodumuzu sanal makineye indir (checkout).
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Adım: Java Geliştirme Kiti'ni (JDK) kur.
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto' # Amazon'un Java dağıtımını kullanıyoruz.
          java-version: '17'

      # 3. Adım: Projeyi Maven ile paketle (.jar dosyası oluştur).
      - name: Build with Maven
        run: mvn clean package -DskipTests
        # -DskipTests, CI/CD sürecini hızlandırmak için testleri atlar.

      # 4. Adım: AWS kimlik bilgilerini GitHub Secrets'tan alıp ayarla.
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      # 5. Adım: Oluşturulan .jar dosyasını AWS Elastic Beanstalk'e yükle.
      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}      # <-- DÜZELTİLDİ
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # <-- DÜZELTİLDİ
          application_name: iski-radar-app
          environment_name: Iski-radar-app-env
          region: eu-north-1
          version_label: ${{ github.sha }}
          deployment_package: target/application.jar